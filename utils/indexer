#!/usr/bin/env ruby

require 'json'

if ARGV.length != 2
  abort('Usage: indexer <source file> <destination file>')
end

file = File.read(ARGV[0])
$tree = JSON.parse(file)
$index = Hash.new { |h, k| h[k] = [] }

def resolve(address)
  node = $tree['root']
  address.each do |a|
    node = $tree[node]['Children'][a]
  end
  node
end

def indexEachNode(address=[])
  node = resolve(address)
  id = if address.empty? then '0' else '0-' + address.join('-') end
  # puts id
  $index[node] << id
  $tree[node]['Children'].each_with_index do |c, i|
    address << i
    indexEachNode(address)
    address.pop()
  end
end

indexEachNode()
puts "#{$index.length} / #{$tree.length - 2} nodes indexed"

File.open(ARGV[1], "w") do |f|
  f.write($index.to_json)
end
